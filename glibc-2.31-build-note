Record for the time when I building glibc-2.31

Compiler      :  gcc 10.3.0
Libc          :  glibc-2.17
Machine       :  Laptop
Architecture  :  x86_64

!!  Before update glibc,best to update system once through package manager.
!!  Update glibc is more dangerous than switch a kernel.

What I did :
        1> mkdir under glibc source tree.
        2> chdir to new directory.
        3> shell process :
                   ../configure CFLAGS="-O2 -fPIC" --prefix=/usr --enable-add-ons \
                   --enable-stackguard-randomization --enable-stack-protector=strong \
                   --disable-profile --enable-kernel=5.4.32 --enable-shared \
                   --enable-obsolete-nsl
           /**
            * --enable-obsolete-nsl => Compile all nsl related components for compatible
            *                          to the old system.Better enable this,otherwise,
            *                          may throw error during compiling.
            * --enable-kernel       => Optimize to Kernel 5.4.32.
            *                          This request current Kernelis Linux 5.4.32.
            *                          -> Compile Kernel
            *                          -> Install Kernel
            *                          -> Boot the new Kernel
            *                          -> Compile glibc
            */
         4> make
         5> Modify script "scripts/test-installtion.pl" under glibc source code tree.
            Add no "nss_test2" checking :
                    start at line emacs : line number 126

                    if branch :
                            ...
                            && $name ne "thread_db"
                            && $name ne "nss_test2"     <= This is what have to add
                            && $name ne "nss_test1" && $name ne "libgcc_s") {
                            ...

            This will prevent an error occurs(... GLIBC@PRIVATE ...) during installation.
         6> make check
            make install
         7> check if system is no problem occurred
            do
                    make localedata/install-locales
         8> END

Remove glibc rpm package before :
        !! must compiled glibc at first.
        
        1> open several terminals at first.
        2> remove glibc.x86_64 or glibc.i686  /* Distribution depends */
        3> after accomplished removing,almost all terminal commands
           are available,but some shell built-in commands are still
           work.
           glibc-build-directory :
             build-dir {
                     libc.so
             }

             elf {
                     ld-linux-x86-64.so.2
                     sln /* static linkage */
             }

             nptl {
                     libpthread.so
             }

             dlfcn {
                     libdl.so
             }

        4> export some environment variables :
             export LD_LIBRARY_PATH=$(pwd):$(pwd)/nptl:$(pwd)/dlfcn:$LD_LIBRARY_PATH
             export LD_PRELOAD=$(pwd)/libc.so

           makeup symbolic link :
             elf/sln $(pwd)/elf/ld-linux-x86-64.so.2 /usr/lib64/ld-linux-x86-64.so.2
            
        5> make install
           /**
            * Finally,"make" command will report an error about "libc.so".
            * "chvt" to another terminal where no LD_PRELOAD exported,then goto
            * build-dir and "make install" again.
            */

        !! inconsistence is because the new "libc.so" have not been loaded.
           no ld-linux-x86-64.so.2 is because dynamic linker unfound,even exported
           LD_PRELOAD or LD_LIBRARY_PATH,where to find out dynamic linker is defined
           during program compile time.